{"version":3,"file":"static/js/285.e587443b.chunk.js","mappings":"qLAIaA,EAASC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KAEHG,IAAI,EAAG,0CACPC,SAAS,0BACZC,OAAQL,EAAAA,GACE,gCACPM,QARH,0GAQwB,6BACrBF,SAAS,2B,+JCHC,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,EAAWC,EAAAA,GAOnB,OACEC,EAAAA,EAAAA,KAACF,EAAM,CACLG,iBAAkBd,EAAAA,EAClBe,SARiB,SAAAC,GACnBC,QAAQC,IAAIF,GACZP,GAASU,EAAAA,EAAAA,IAASH,GACpB,EAMII,cAAe,CACbjB,KAAM,GACNkB,MAAO,GACPC,SAAU,IACVC,SAED,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAAcC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASC,EAAML,EAANK,OAAM,OACrDC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,YAAU,EAACjB,SAAUU,EAAaF,SAAA,EACtCO,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,UAAU,OAAMX,SAAA,EACnBO,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,MAAU,CAACI,GAAIF,EAAAA,EAAKG,UAAU,qBAAoBb,SAAA,EACjDV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,MAAU,CAAAR,SAAC,UACZV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAY,CACXM,KAAK,OACLlC,KAAK,OACLmC,MAAOX,EAAOxB,KACdoC,SAAUb,EACVc,QAASZ,EAAQzB,OAAS0B,EAAO1B,KACjCsC,YAAaZ,EAAO1B,QAEtBU,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAAAR,SAAC,iBACvBV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAACM,KAAK,UAASd,SAClCM,EAAO1B,WAGZ2B,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,MAAU,CAACI,GAAIF,EAAAA,EAAKG,UAAU,qBAAoBb,SAAA,EACjDV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,MAAU,CAAAR,SAAC,WACZV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAY,CACXM,KAAK,OACLlC,KAAK,QACLmC,MAAOX,EAAON,MACdkB,SAAUb,EACVc,QAASZ,EAAQP,QAAUQ,EAAOR,MAClCoB,YAAaZ,EAAOR,SAEtBR,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAAAR,SAAC,iBACvBV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAACM,KAAK,UAASd,SAClCM,EAAOR,YAGZS,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,MAAU,CAACI,GAAIF,EAAAA,EAAKG,UAAU,qBAAoBb,SAAA,EACjDV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,MAAU,CAAAR,SAAC,cACZV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAY,CACXM,KAAK,WACLlC,KAAK,WACLmC,MAAOX,EAAOL,SACdiB,SAAUb,EACVc,QAASZ,EAAQN,WAAaO,EAAOP,SACrCmB,YAAaZ,EAAOP,YAEtBT,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAAAR,SAAC,iBACvBV,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,QAAAA,SAAqB,CAACM,KAAK,UAASd,SAClCM,EAAOP,kBAKdT,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACL,KAAK,SAASH,UAAU,aAAYX,SAAC,eAGxC,GAIf,C","sources":["components/yupSchema.js","pages/Register.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'The name must be longer than 3 letters')\n    .required('This field is required'),\n  number: yup\n    .string('Phone number is only numbers')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('This field is required'),\n});\n","import Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { schema } from 'components/yupSchema';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const { Formik } = formik;\n\n  const handleSubmit = data => {\n    console.log(data);\n    dispatch(register(data));\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Col className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"validationFormik01\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                isValid={touched.name && !errors.name}\n                isInvalid={!!errors.name}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.name}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormik02\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n                isInvalid={!!errors.email}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormik02\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                isValid={touched.password && !errors.password}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n\n          <Button type=\"submit\" className=\"btn-danger\">\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["schema","yup","shape","name","min","required","number","matches","RegisterForm","dispatch","useDispatch","Formik","formik","_jsx","validationSchema","onSubmit","data","console","log","register","initialValues","email","password","children","_ref","handleSubmit","handleChange","values","touched","errors","_jsxs","Form","noValidate","Col","className","as","controlId","type","value","onChange","isValid","isInvalid","Button"],"sourceRoot":""}