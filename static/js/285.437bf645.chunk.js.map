{"version":3,"file":"static/js/285.437bf645.chunk.js","mappings":"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","sources":["pages/Register.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport * as yup from 'yup';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const { Formik } = formik;\n\n  const handleSubmit = data => {\n    console.log(data);\n    dispatch(register(data));\n  };\n  const schema = yup.object().shape({\n    name: yup.string().required('This field is required'),\n    email: yup\n      .string()\n      .email('Email is not a valid')\n      .required('This field is required'),\n    password: yup\n      .string()\n      .min(7, 'The password must be longer then 7 symbols')\n      .required('This field is required'),\n  });\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Col className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"validationFormik01\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                isValid={touched.name && !errors.name}\n                isInvalid={!!errors.name}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.name}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormik02\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n                isInvalid={!!errors.email}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormik03\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                isValid={touched.password && !errors.password}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n\n          <Button type=\"submit\" className=\"btn-danger\" onClick={handleSubmit}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","Formik","formik","schema","yup","shape","name","required","email","password","min","_jsx","validationSchema","onSubmit","data","console","log","register","initialValues","children","_ref","handleSubmit","handleChange","values","touched","errors","_jsxs","Form","noValidate","autoComplete","Col","className","as","controlId","type","value","onChange","isValid","isInvalid","Button","onClick"],"sourceRoot":""}