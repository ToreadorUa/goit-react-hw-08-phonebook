{"version":3,"file":"static/js/344.a94a7f8d.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Row.js","pages/Login.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  const { Formik } = formik;\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email is not a valid')\n      .required('This field is required'),\n    password: yup\n      .string()\n      .min(7, 'The password must be longer then 7 symbols')\n      .required('This field is required'),\n  });\n\n  const handleSubmit = data => {\n    console.log(data);\n    dispatch(login(data));\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"validationFormik01\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n                isInvalid={!!errors.email}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormik02\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                isValid={touched.password && !errors.password}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n\n          <Button type=\"submit\" className=\"btn-danger\">\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["Row","React","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","_objectSpread","classNames","displayName","LoginForm","dispatch","useDispatch","Formik","formik","schema","yup","shape","email","required","password","min","validationSchema","onSubmit","data","console","log","login","initialValues","children","handleSubmit","handleChange","values","touched","errors","_jsxs","Form","noValidate","Col","controlId","type","name","value","onChange","isValid","isInvalid","Button"],"sourceRoot":""}