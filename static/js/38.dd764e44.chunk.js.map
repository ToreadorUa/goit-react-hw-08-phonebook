{"version":3,"file":"static/js/38.dd764e44.chunk.js","mappings":"yRAUe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,EAAWC,EAAAA,GACbC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,MAAM,wBACNC,SAAS,0BACZC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,8CACPF,SAAS,4BAQd,OACEG,EAAAA,EAAAA,KAACT,EAAM,CACLU,iBAAkBR,EAClBS,SARiB,SAAAC,GACnBC,QAAQC,IAAIF,GACZd,GAASiB,EAAAA,EAAAA,IAAMH,GACjB,EAMII,cAAe,CACbX,MAAO,GACPE,SAAU,IACVU,SAED,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAAcC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASC,EAAML,EAANK,OAAM,OACrDC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,YAAU,EAACf,SAAUQ,EAAaF,SAAA,EACtCO,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,UAAU,OAAMX,SAAA,EACnBO,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,MAAU,CAACI,GAAIC,EAAAA,EAAKC,GAAG,IAAIC,UAAU,qBAAoBf,SAAA,EACxDR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,MAAU,CAAAR,SAAC,WACZR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAY,CACXQ,KAAK,OACLC,KAAK,QACLC,MAAOd,EAAOhB,MACd+B,SAAUhB,EACViB,QAASf,EAAQjB,QAAUkB,EAAOlB,MAClCiC,YAAaf,EAAOlB,SAEtBI,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAAA,SAAqB,CAAAR,SAAC,iBACvBR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAAA,SAAqB,CAACQ,KAAK,UAAShB,SAClCM,EAAOlB,YAGZmB,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,MAAU,CAACI,GAAIC,EAAAA,EAAKC,GAAG,IAAIC,UAAU,qBAAoBf,SAAA,EACxDR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,MAAU,CAAAR,SAAC,cACZR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAY,CACXQ,KAAK,WACLC,KAAK,WACLC,MAAOd,EAAOd,SACd6B,SAAUhB,EACViB,QAASf,EAAQf,WAAagB,EAAOhB,SACrC+B,YAAaf,EAAOhB,YAEtBE,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAAA,SAAqB,CAAAR,SAAC,iBACvBR,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,QAAAA,SAAqB,CAACQ,KAAK,UAAShB,SAClCM,EAAOhB,kBAKdE,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACN,KAAK,SAASL,UAAU,aAAYX,SAAC,YAGxC,GAIf,C","sources":["pages/Login.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  const { Formik } = formik;\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email is not a valid')\n      .required('This field is required'),\n    password: yup\n      .string()\n      .min(7, 'The password must be longer then 7 symbols')\n      .required('This field is required'),\n  });\n\n  const handleSubmit = data => {\n    console.log(data);\n    dispatch(login(data));\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n                isInvalid={!!errors.email}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                isValid={touched.password && !errors.password}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n\n          <Button type=\"submit\" className=\"btn-danger\">\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","Formik","formik","schema","yup","shape","email","required","password","min","_jsx","validationSchema","onSubmit","data","console","log","login","initialValues","children","_ref","handleSubmit","handleChange","values","touched","errors","_jsxs","Form","noValidate","Row","className","as","Col","md","controlId","type","name","value","onChange","isValid","isInvalid","Button"],"sourceRoot":""}